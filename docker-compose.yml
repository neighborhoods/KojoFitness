version: '2'

services:

  ### Mount Applications ######################################

  applications:
    image: tianon/true
    volumes:
    - ../KojoFitness/:/var/www/html/kojo_fitness.neighborhoods.com

  mysql_data:
    image: tianon/true
    volumes:
    - ./data/mysql:/docker-entrypoint-initdb.d

  pgsql_data:
    image: tianon/true
    volumes:
    - ./data/pgsql:/docker-entrypoint-initdb.d

    ### Kōjō Fitness Container (php-fpm) #########################

  kojo_fitness:
    build:
      context: .
      args:
        - INSTALL_XDEBUG=true
        - COMPOSER_INSTALL=false
    volumes:
      # Shares AWS credentials to the docker container
      - $HOME/.aws:/root/.aws
      - $HOME/.aws:/var/www/.aws
    volumes_from:
      - applications
    env_file:
      - kojo.env
    environment:
      DD_AGENT_HOST: datadog-agent
      DD_TRACE_AGENT_PORT: 8126
      DD_SERVICE: "kojo-fitness"
      DD_ENV: "local"
      # this enables tracing of PHP scripts from the CLI
      DD_TRACE_CLI_ENABLED: "true"
      # this disables sending traces via a background thread as it doesn't work correctly with forked processes
      DD_TRACE_BETA_SEND_TRACES_VIA_THREAD: "false"
      # this disables generating a root span to allow tracing of long running processes
      DD_TRACE_GENERATE_ROOT_SPAN: "false"
      # this enables flushing of the tracer when all spans are closed to allow tracing of long running processes
      DD_TRACE_AUTO_FLUSH_ENABLED: "true"
      # this automatically finishes all spans when the tracer is flushed
      DD_AUTOFINISH_SPANS: "true"

### MySQL Container #########################################

  mysql:
    build:
      context: ./mysql
      args:
      - MYSQL_DATABASE=kojo
      - MYSQL_USER=kojo
      - MYSQL_PASSWORD=kojofitness
      - MYSQL_ROOT_PASSWORD=kojoroot
    volumes:
    - mysql:/var/lib/mysql
    volumes_from:
    - mysql_data
    ports:
    - "3307:3306"

### PostgreSQL PostGis Container ############################

  pgsql:
    build: ./postgres
    volumes:
    - postgres:/var/lib/postgresql/data
    volumes_from:
    - pgsql_data
    ports:
    - "5433:5432"
    environment:
      POSTGRES_DB: kojo
      POSTGRES_USER: kojo
      POSTGRES_PASSWORD: kojofitness

  ### Redis Container #########################################

  redis:
    build: ./redis
    volumes:
      - redis:/data
    ports:
      - "6380:6379"

  ### DataDog Container #########################################
  datadog-agent:
    image: datadog/agent:7
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - /proc/:/host/proc/:ro
      - /sys/fs/cgroup/:/host/sys/fs/cgroup:ro
    env_file:
      - datadog_api_key.env
    environment:
      DD_SITE: "datadoghq.com"
### Volumes Setup ###########################################

volumes:
    mysql:
      driver: "local"
    postgres:
      driver: "local"
    redis:
      driver: "local"

### Network Setup ###########################################

networks:
  default:
    driver: bridge
